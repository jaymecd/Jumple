/**
 * Jumple is a simple cross-browser/-platform Dependency Injection Container for Javascript
 *
 * Author: Nikolai Zujev <nikolai.zujev@gmail.com>
 * License:  MIT License
 * https://github.com/jaymecd/Jumple
 * Copyright (c) 2012 Nikolai Zujev
 */
(function(){var c=this,g=c.Jumple,d=Object.prototype.hasOwnProperty,e=Object.prototype.toString;isFunction=function(a){return"[object Function]"==e.call(a)};var f=c.Jumple=function(a){this._data={};if(a&&"[object Object]"==e.call(a))for(var b in a)d.call(a,b)&&this.set(b,a[b])};f.noConflict=function(){c.Jumple=g;return this};f.prototype={has:function(a){return d.call(this._data,a)},get:function(a){a=this.raw(a);return isFunction(a)?a(this):a},raw:function(a){if(!this.has(a))throw Error('Identifier "'+
a+'" is not defined');return this._data[a]},set:function(a,b){this._data[a]=b;return this},unset:function(a){this._data[a]=null;delete this._data[a];return this},share:function(a,b){if(!isFunction(b))throw Error("Expection function as callable; got: "+typeof b);return this.set(a,function(a){if(!d.call(b,"__jumple_static"))b.__jumple_static=b(a);return b.__jumple_static})},protect:function(a,b){if(!isFunction(b))throw Error("Expection function as callable; got: "+typeof b);return this.set(a,function(){return b})}}}).call(this);
